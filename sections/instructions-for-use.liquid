<link rel="stylesheet" href="{{ 'instructions-for-use.css' | asset_url }}" media="print" onload="this.media='all'">

<div class="section section--padded color-scheme" style="margin-top: 0; margin-bottom: 0; padding-bottom:0;">
    <div class="container">
        <div class="tabs-wrapper flex justify-center gap-theme">
            {% assign used_tab_names = '' %}
            {% for instruction in shop.metaobjects.instructions.values %}
                {% unless used_tab_names contains instruction.tab_name %}
                    <button class="btn btn--secondary">{{ instruction.tab_name }}</button>
                    {% capture used_tab_names %}{{ used_tab_names }}{{ instruction.tab_name }},{% endcapture %}
                {% endunless %}
            {% endfor %}
        </div>
    </div>
</div>

<div class="section section--padded" style="margin-top: 0; padding-top:0;">
    <div class="container">
        <div class="instructions-index">
            {% for instruction in shop.metaobjects.instructions.values %}
                <div class="instruction-item" tabName="{{ instruction.tab_name }}">
                    <div class="instruction-image-wrapper">
                        <img src="{{ instruction.product_image |  image_url }}" />
                    </div>
                    <h3 class="h5 m-0">{{ instruction.name }}</h3>
                    {% if instruction.downloads.value.size > 0 %}
                        <p class="instruction-dd-label">Downloads</p>
                        <select name="{{ instruction.name }}-downloads">
                            <option>Select Download</option>
                            {% for download in instruction.downloads.value %}
                                <option value="{{ download.file }}">{{ download.language }}</option>
                            {% endfor %}
                        </select>
                    {% endif %}
                    {% if instruction.videos.value.size > 0 %}
                        <p class="instruction-dd-label">Video</p>
                        <select name="{{ instruction.name }}-videos">
                            <option>Select Video</option>
                            {% for video in instruction.videos.value %}
                                <option value="{{ video.link }}">{{ video.title }}</option>
                            {% endfor %}
                        </select>
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.tabs-wrapper button');

    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            // Check if the button already has the 'btn--primary' class
            if (this.classList.contains('btn--primary')) {
                return;
            }

            // Remove 'btn--primary' from all buttons and add 'btn--secondary'
            tabs.forEach(t => {
                t.classList.remove('btn--primary');
                t.classList.add('btn--secondary');
            });

            // Add 'btn--primary' to the clicked button and remove 'btn--secondary'
            this.classList.add('btn--primary');
            this.classList.remove('btn--secondary');

            // Get all instruction items
            const instructionItems = document.querySelectorAll('.instruction-item');

            // Remove 'active' class from all instruction items
            instructionItems.forEach(item => {
                item.classList.remove('active');
            });

            // Add 'active' class to instruction items that match the tab name
            const tabName = this.innerText;
            instructionItems.forEach(item => {
                if (item.getAttribute('tabName') === tabName) {
                    item.classList.add('active');
                }
            });
        });
    });
});

</script>

{% comment %} <script src="{{ 'instructions-for-use.js' | asset_url }}" defer="defer"></script> {% endcomment %}


{% schema %}
    {
      "name": "Instructions For Use",
      "presets": [
        {
          "name": "Instructions For Use",
          "category": "Template"
        }
      ]
    }
{% endschema %}